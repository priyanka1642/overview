package com.practice;

import java.util.ArrayDeque;
import java.util.Deque;
import java.util.Iterator;
import java.util.PriorityQueue;
import java.util.Queue;

public class queueex {

// queue example (its only add from last side of queue)
	public void queue() {
	PriorityQueue<Integer> pq= new PriorityQueue<Integer>();
	pq.add(1);
	pq.add(2);
	pq.add(3);
	pq.add(4);
	System.out.println(pq);
	pq.add(5);
	System.out.println(pq);
	System.out.println("head "+ pq.peek());         // get top element
	System.out.println("head "+ pq.element());      // get top element
	System.out.println("poll "+ pq.poll());        // delete 1 st element
	System.out.println("remove "+ pq.remove());    // delete 1st element
	}
	
	
	// dequeue example (using that we can add the element in queue in front or back side, de means double ended )
	public void dequeue() {
		Deque<String> dq= new ArrayDeque <String>();
		dq.add("one");
		dq.add("two");
		dq.add("three");
		dq.add("four");
		dq.addLast("six");
		System.out.println(dq); //without add first nd last method
	    dq.addFirst("zero");
	    dq.addLast("five");
	    System.out.println(dq); 
	    
		Iterator it= dq.iterator();
		while(it.hasNext()) {
			System.out.println(it.next());

		}
	}
	
	
	public static void main(String[] args) {
	queueex qu=new queueex();
		qu.dequeue();
		qu.queue();
		
	}

	

	
}